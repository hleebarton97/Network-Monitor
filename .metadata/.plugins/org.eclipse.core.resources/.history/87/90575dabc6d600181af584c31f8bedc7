package com.gtek.handlers;

import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;
import com.gtek.objects.NetworkSite;
import com.gtek.util.Console;

public class Ping extends TimerTask {
	
	private ArrayList<NetworkSite> NETWORK_SITE_LIST; // Network Site list
	private int THREAD_COUNT; // How many threads to create
	private int SITE_PER_THREAD = 10; // How many sites to ping per thread
	
	

	/**
	 * Create the timer object, create the ping object,
	 * set the pingable list of network sites, and then
	 * start the timed function.
	 * 
	 * @param list
	 */
	public static void Start(ArrayList<NetworkSite> list) {
		Timer timer = new Timer(); // Create new timer object
    	Ping ping = new Ping(); // Create new ping object (this)
    	ping.setPingable(list); // Set the list
    	timer.schedule(ping, 0, (60000)); // Start timed task
	}
	
	public static void Stop() {}
	
	/**
	 * Task that is timed to run every minute.
	 */
	@Override
	public void run() {
		
		// Determine how many threads are required.
		Console.log((double)NETWORK_SITE_LIST.size());
		this.setThreadCount((int)Math.ceil(NETWORK_SITE_LIST.size() / this.SITE_PER_THREAD));
		Console.log("Threads Required: " + this.THREAD_COUNT + " | Count per Thread: " + this.SITE_PER_THREAD);
		
		// Create a new thread object to ping the appropriate amount of network sites
		// per thread
		for(int i = 0; i < THREAD_COUNT; i++) {
			
			if(i < THREAD_COUNT - 1) {
				Pinger pinger = new Pinger(new ArrayList(NETWORK_SITE_LIST.subList((int)(i * this.SITE_PER_THREAD), (int)((i + 1) * this.SITE_PER_THREAD))));
				pinger.start();
			} else { // Get the rest of the network sites left
				Pinger pinger = new Pinger(new ArrayList(NETWORK_SITE_LIST.subList((int)(i * this.SITE_PER_THREAD), (NETWORK_SITE_LIST.size() - 1))));
				pinger.start();
			}
			
		}
	}
	
	/**
	 * Set the pingable list of network sites
	 * 
	 * @param list
	 */
	public void setPingable(ArrayList<NetworkSite> list) {
		this.NETWORK_SITE_LIST = list;
	}
	
	/**
	 * Set the thread count needed depending
	 * on how many devices are being pinged.
	 * 
	 * @param count
	 */
	private void setThreadCount(int count) {
		this.THREAD_COUNT = count;
	}

}
